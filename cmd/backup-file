#!/bin/sh
export INFO='quickly backup multiple files locally or globally'

~/scripts/cmd/require rsync || exit $?

LOCATION_LOCAL='.backups'
if [ -n "$XDG_DATA_HOME" ];
    then LOCATION_GLOBAL="$XDG_DATA_HOME/backups"
    else LOCATION_GLOBAL="$HOME/.local/share/backups"
fi

timecode="$(date '+%Y-%m-%d-%H%M')"
source_dir="$(echo "$PWD" | sed 's|/|%|g')"

# Local and global backup location
dest_local="$LOCATION_LOCAL/$timecode"
dest_global="$LOCATION_GLOBAL/$source_dir/$timecode"

if [ "$1" = '-h' ] || [ "$1" = '--help' ]; then
    echo "backup-file: $INFO"
    echo
    echo 'USAGE:'
    echo '    backup-file [...FILES]'
    exit 0
fi

if [ -z "$1" ]; then
    echo "backup-file: missing argument." >&2
    exit 1
fi

# Single argument `.` is same as backing up cwd to `../$dest`
files="$*"
if [ "$#" -eq 1 ] && [ "$1" = '.' ]; then
    files="$(basename "$PWD")"
    is_cwd=1
    cd ..
fi

function create_dir() {
    dir="$1"
    if [ ! -e "$dir" ]; then
        mkdir -p "$dir"
        if [ $? -ne 0 ]; then
            echo "backup-file: failed to create $dir." >&2
            exit 2
        fi
    fi
}

create_dir "$dest_local"
create_dir "$dest_global"

# Quickly check all files exist (non-recursively)
for file in $files; do
    if [ ! -e "$file" ]; then
        echo "backup-file: $file does not exist." >&2
        exit 2
    fi
done

function copy() {
    file="$1"
    dest="$2"
    # --exclude local location to NOT recopy sub-backups
    rsync --archive --exclude="$LOCATION_LOCAL" "$file" "$dest/$file" \
        || exit 2
}

# Local
for file in $files; do
    copy "$file" "$dest_local"
    [ -n "$is_cwd" ] && printf '../'
    echo "$dest_local/$file"
done
# Global
for file in $files; do
    copy "$file" "$dest_global"
    echo "$dest_global/$file"
done

