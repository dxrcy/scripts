#!/bin/sh
export INFO='convert digits of a number into different codepoint set'

# Override built-in printf, for Unicode support with narrowly-compliant shells
printf() { /bin/printf "$@"; }

ignore=0
string=""
while [ "$#" -gt 0 ]; do
    if [ -n "$mode" ]; then
        case "$1" in
            -s|--subscript|\
            -S|--superscript|\
            -b|--bold|\
            -B|--boldserif|\
            -o|--outline|\
            -c|--circled|\
            -e|--segmented)
                echo 'fancy-digits: too many mode arguments given.'
                exit 1
                ;;
        esac
    fi

    case "$1" in
        -h|--help)
            echo "fancy-digits: $INFO"
            echo '    USAGE:'
            echo '        fancy-digits [MODE] [OPTIONS] [..TEXT]'
            echo '    MODE:'
            echo '        -s  --substring    [₀₁₂₃₄₅₆₇₈₉] (default)'
            echo '        -S  --superscript  [⁰¹²³⁴⁵⁶⁷⁸⁹]'
            echo '        -b  --bold         [𝟬𝟭𝟮𝟯𝟰𝟱𝟲𝟳𝟴𝟵]'
            echo '        -B  --boldserif    [𝟎𝟏𝟐𝟑𝟒𝟓𝟔𝟕𝟖𝟗]'
            echo '        -o  --outline      [⓪①②③④⑤⑥⑦⑧⑨]'
            echo '        -c  --circled      [⓿➊➋➌➍➎➏➐➑➒]'
            echo '        -e  --segmented    [🯰🯱🯲🯳🯴🯵🯶🯷🯸🯹]'
            echo '    OPTIONS:'
            echo '        -i  --ignore       ignores characters other than numbers and whitespace'
            echo '        -I  --ignore-all   ignores characters other than numbers'
            exit 0
            ;;
        -s|--subscript)   mode='subscript'   ;;
        -S|--superscript) mode='superscript' ;;
        -b|--bold)        mode='bold'        ;;
        -B|--boldserif)   mode='boldserif'   ;;
        -o|--outline)     mode='outline'     ;;
        -c|--circled)     mode='circled'     ;;
        -e|--segmented)   mode='segmented'   ;;
        -i|--ignore)      ignore=1 ;;
        -I|--ignore-all)  ignore=2 ;;
        -*)
            echo 'fancy-digits: unknown mode.'
            exit 1
            ;;
        *) [ "$string" ] \
            && string="$string $1" \
            || string="$1"
            ;;
    esac
    shift
done

if [ ! "$string" ]; then
    exit 0
fi

i=0
while [ "$i" -lt "${#string}" ]; do
    i=$((i + 1))
    digit=$(echo "$string" | cut -c "$i")
    case "$digit:$mode" in

        '0:subscript')   printf "\u2080" ;; 
        '1:subscript')   printf "\u2081" ;; 
        '2:subscript')   printf "\u2082" ;; 
        '3:subscript')   printf "\u2083" ;; 
        '4:subscript')   printf "\u2084" ;; 
        '5:subscript')   printf "\u2085" ;; 
        '6:subscript')   printf "\u2086" ;; 
        '7:subscript')   printf "\u2087" ;; 
        '8:subscript')   printf "\u2088" ;; 
        '9:subscript')   printf "\u2089" ;; 

        '0:superscript') printf "\u2070" ;; 
        '1:superscript') printf "\u00B9" ;; 
        '2:superscript') printf "\u00B2" ;; 
        '3:superscript') printf "\u00B3" ;; 
        '4:superscript') printf "\u2074" ;; 
        '5:superscript') printf "\u2075" ;; 
        '6:superscript') printf "\u2076" ;; 
        '7:superscript') printf "\u2077" ;; 
        '8:superscript') printf "\u2078" ;; 
        '9:superscript') printf "\u2079" ;; 

        '0:bold')        printf "\U0001D7EC" ;; 
        '1:bold')        printf "\U0001D7ED" ;; 
        '2:bold')        printf "\U0001D7EE" ;; 
        '3:bold')        printf "\U0001D7EF" ;; 
        '4:bold')        printf "\U0001D7F0" ;; 
        '5:bold')        printf "\U0001D7F1" ;; 
        '6:bold')        printf "\U0001D7F2" ;; 
        '7:bold')        printf "\U0001D7F3" ;; 
        '8:bold')        printf "\U0001D7F4" ;; 
        '9:bold')        printf "\U0001D7F5" ;; 

        '0:boldserif')   printf "\U0001D7CE" ;; 
        '1:boldserif')   printf "\U0001D7CF" ;; 
        '2:boldserif')   printf "\U0001D7D0" ;; 
        '3:boldserif')   printf "\U0001D7D1" ;; 
        '4:boldserif')   printf "\U0001D7D2" ;; 
        '5:boldserif')   printf "\U0001D7D3" ;; 
        '6:boldserif')   printf "\U0001D7D4" ;; 
        '7:boldserif')   printf "\U0001D7D5" ;; 
        '8:boldserif')   printf "\U0001D7D6" ;; 
        '9:boldserif')   printf "\U0001D7D7" ;; 

        '0:outline')     printf "\u24EA" ;; 
        '1:outline')     printf "\u2460" ;; 
        '2:outline')     printf "\u2461" ;; 
        '3:outline')     printf "\u2462" ;; 
        '4:outline')     printf "\u2463" ;; 
        '5:outline')     printf "\u2464" ;; 
        '6:outline')     printf "\u2465" ;; 
        '7:outline')     printf "\u2466" ;; 
        '8:outline')     printf "\u2467" ;; 
        '9:outline')     printf "\u2468" ;; 

        '0:circled')     printf "\u24FF" ;; 
        '1:circled')     printf "\u278A" ;; 
        '2:circled')     printf "\u278B" ;; 
        '3:circled')     printf "\u278C" ;; 
        '4:circled')     printf "\u278D" ;; 
        '5:circled')     printf "\u278E" ;; 
        '6:circled')     printf "\u278F" ;; 
        '7:circled')     printf "\u2790" ;; 
        '8:circled')     printf "\u2791" ;; 
        '9:circled')     printf "\u2792" ;; 

        '0:segmented')   printf "\U0001FBF0" ;; 
        '1:segmented')   printf "\U0001FBF1" ;; 
        '2:segmented')   printf "\U0001FBF2" ;; 
        '3:segmented')   printf "\U0001FBF3" ;; 
        '4:segmented')   printf "\U0001FBF4" ;; 
        '5:segmented')   printf "\U0001FBF5" ;; 
        '6:segmented')   printf "\U0001FBF6" ;; 
        '7:segmented')   printf "\U0001FBF7" ;; 
        '8:segmented')   printf "\U0001FBF8" ;; 
        '9:segmented')   printf "\U0001FBF9" ;; 

        ' :'*) [ "$ignore" -ge 2 ] || printf '%s' "$digit" ;;
        *)     [ "$ignore" -ge 1 ] || printf '%s' "$digit" ;;
    esac
done
echo

